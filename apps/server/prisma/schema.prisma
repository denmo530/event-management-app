// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique 
  name      String?
  orgIds    String[] @default([])
  externalId String?  @unique // This is the clerkId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  events    Event[]
}

model Type {
  id        String   @id @default(cuid())
  name      String
  description String?
  events EventType[]
}
model Venue {
  id        String   @id @default(cuid())
  name      String?
  location  String
  capacity  Int?
  events    EventVenue[]
}

model Sponsor {
  id        String   @id @default(cuid())
  name      String
  logoUrl   String?
  website   String?
  events    EventSponsor[]
}

model Attendee {
  id         String   @id @default(cuid())
  name       String?
  email      String
  status     String
  events     EventAttendee[]
}

model Budget {
  id        String   @id @default(cuid())
  item      String
  amount    Float
  events    EventBudget[]
}

model Analytics {
  id        String   @id @default(cuid())
  metricName  String
  value     Float
  events    EventAnalytics[]
}

model ContactInfo {
  id        String   @id @default(cuid())
  name      String
  email     String
  phoneNumber     String
  events    EventContactInfo[]
}

model CustomField {
  id        String   @id @default(cuid())
  name      String
  type      String
  events    EventCustomField[]
}

model Event {
  id              String               @id @default(cuid())
  name            String
  description     String?
  startDate       DateTime
  endDate         DateTime
  location        String
  organizer       User              @relation(fields: [organizerId], references: [id])
  organizerId     String
  eventTypes      EventType[]
  venues          EventVenue[]
  sponsors        EventSponsor[]
  attendees       EventAttendee[]
  contactInfo     EventContactInfo[]
  budgets         EventBudget[]
  analytics       EventAnalytics[]
  customFields    EventCustomField[]
}

model EventType {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  type Type @relation(fields: [eventTypeId], references: [id])
  eventTypeId String
  @@id([eventId, eventTypeId])

}

model EventVenue {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  venue   Venue   @relation(fields: [venueId], references: [id])
  venueId String
  @@id([eventId, venueId])
}

model EventSponsor {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  sponsor Sponsor  @relation(fields: [sponsorId], references: [id])
  sponsorId String
  @@id([eventId, sponsorId])
}

model EventAttendee {
  event    Event   @relation(fields: [eventId], references: [id])
  eventId  String
  attendee Attendee @relation(fields: [attendeeId], references: [id])
  attendeeId String
  @@id([eventId, attendeeId])
}

model EventBudget {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  budget  Budget  @relation(fields: [budgetId], references: [id])
  budgetId String
  @@id([eventId, budgetId])
}

model EventAnalytics {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  analytics Analytics @relation(fields: [analyticsId], references: [id])
  analyticsId String
  @@id([eventId, analyticsId])
}

model EventContactInfo {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  contactInfo ContactInfo @relation(fields: [contactInfoId], references: [id])
  contactInfoId String
  @@id([eventId, contactInfoId])
}

model EventCustomField {
  event   Event   @relation(fields: [eventId], references: [id])
  eventId String
  customField CustomField @relation(fields: [customFieldId], references: [id])
  customFieldId String
  @@id([eventId, customFieldId])
}
